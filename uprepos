#!/bin/bash
#
# MIT License
#
# Copyright (c) 2022 Aptivi
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

if ! command -v tput &> /dev/null; then
    AQUA=""
    ORANGE=""
    RESET=""
else
    AQUA=$(tput setaf 45)
    ORANGE=$(tput setaf 214)
    RESET=$(tput sgr0)
fi

enum_and_update() {
    readarray -t maybe_gits < <( find "$1" -mindepth 1 -maxdepth 1 -name "*" -type d )
    for maybe_git in "${maybe_gits[@]}"
    do
        if [[ ! -e "$maybe_git/.git" ]]; then
            echo "${ORANGE}[*] ${RESET}Repo $maybe_git is not a git repo. Refusing to update..."
            continue
        fi
        echo "${AQUA}[+] ${RESET}Updating $maybe_git..."
        git -C "$maybe_git" fetch
        git -C "$maybe_git" pull --recurse-submodule
        git -C "$maybe_git" submodule update --remote
        echo "${AQUA}[+] ${RESET}Update of $maybe_git done."
    done
}

if [[ -z $1 ]]; then
    enum_and_update $PWD
else
    enum_and_update "$1"
fi
